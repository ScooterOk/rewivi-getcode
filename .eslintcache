[{"/Users/scooterok/www/rewivi/src/index.js":"1","/Users/scooterok/www/rewivi/src/reportWebVitals.js":"2","/Users/scooterok/www/rewivi/src/components/Layout/Aside/index.js":"3","/Users/scooterok/www/rewivi/src/utils/history.js":"4","/Users/scooterok/www/rewivi/src/pages/HowToStart/index.js":"5","/Users/scooterok/www/rewivi/src/components/Layout/Layout/index.js":"6","/Users/scooterok/www/rewivi/src/components/Layout/Header/index.js":"7","/Users/scooterok/www/rewivi/src/components/icons/index.js":"8","/Users/scooterok/www/rewivi/src/components/HeaderSearch/index.js":"9","/Users/scooterok/www/rewivi/src/components/LangSelect/index.js":"10","/Users/scooterok/www/rewivi/src/components/UploadVideo/index.js":"11","/Users/scooterok/www/rewivi/src/pages/CreateJob/index.js":"12","/Users/scooterok/www/rewivi/src/components/CreateJobStep1/index.js":"13","/Users/scooterok/www/rewivi/src/components/CreateJobStep2/index.js":"14","/Users/scooterok/www/rewivi/src/components/InputAutocomlete/index.js":"15","/Users/scooterok/www/rewivi/src/components/IconInfoSvg/index.js":"16","/Users/scooterok/www/rewivi/src/components/Tags/index.js":"17","/Users/scooterok/www/rewivi/src/components/CreateJobTable/index.js":"18","/Users/scooterok/www/rewivi/src/components/QuestionSearch/index.js":"19","/Users/scooterok/www/rewivi/src/pages/JobList/index.js":"20","/Users/scooterok/www/rewivi/src/components/JobListTableFilter/index.js":"21","/Users/scooterok/www/rewivi/src/components/JobListTable/index.js":"22","/Users/scooterok/www/rewivi/src/components/VideoPlayer/index.js":"23","/Users/scooterok/www/rewivi/src/pages/Registration/index.js":"24","/Users/scooterok/www/rewivi/src/components/RegistrationForm/index.js":"25","/Users/scooterok/www/rewivi/src/core/actions/index.js":"26","/Users/scooterok/www/rewivi/src/store.js":"27","/Users/scooterok/www/rewivi/src/core/reducers/index.js":"28","/Users/scooterok/www/rewivi/src/core/services/index.js":"29","/Users/scooterok/www/rewivi/src/core/reducers/postCreateReducer.js":"30","/Users/scooterok/www/rewivi/src/core/reducers/postsListReducer.js":"31","/Users/scooterok/www/rewivi/src/pages/Login/index.js":"32","/Users/scooterok/www/rewivi/src/components/LoginForm/index.js":"33","/Users/scooterok/www/rewivi/src/pages/PasswordRecovery/index.js":"34","/Users/scooterok/www/rewivi/src/pages/ContactUs/index.js":"35","/Users/scooterok/www/rewivi/src/core/reducers/userReducer.js":"36","/Users/scooterok/www/rewivi/src/core/routes/index.js":"37","/Users/scooterok/www/rewivi/src/core/routes/CoreRouter.js":"38","/Users/scooterok/www/rewivi/src/pages/NotFound/index.js":"39","/Users/scooterok/www/rewivi/src/pages/NotFound/notFound.jsx":"40","/Users/scooterok/www/rewivi/src/core/routes/PrivatRouter.js":"41","/Users/scooterok/www/rewivi/src/core/actions/postCreated.js":"42","/Users/scooterok/www/rewivi/src/core/actions/postList.js":"43","/Users/scooterok/www/rewivi/src/core/actions/user.js":"44","/Users/scooterok/www/rewivi/src/components/JobListTable/columns.js":"45","/Users/scooterok/www/rewivi/src/core/constants.js":"46","/Users/scooterok/www/rewivi-getcode/src/index.js":"47","/Users/scooterok/www/rewivi-getcode/src/store.js":"48","/Users/scooterok/www/rewivi-getcode/src/utils/history.js":"49","/Users/scooterok/www/rewivi-getcode/src/core/routes/index.js":"50","/Users/scooterok/www/rewivi-getcode/src/core/reducers/index.js":"51","/Users/scooterok/www/rewivi-getcode/src/core/routes/PrivatRouter.js":"52","/Users/scooterok/www/rewivi-getcode/src/core/routes/CoreRouter.js":"53","/Users/scooterok/www/rewivi-getcode/src/core/reducers/postCreateReducer.js":"54","/Users/scooterok/www/rewivi-getcode/src/core/reducers/postsListReducer.js":"55","/Users/scooterok/www/rewivi-getcode/src/core/reducers/userReducer.js":"56","/Users/scooterok/www/rewivi-getcode/src/pages/PasswordRecovery/index.js":"57","/Users/scooterok/www/rewivi-getcode/src/pages/CreateJob/index.js":"58","/Users/scooterok/www/rewivi-getcode/src/pages/HowToStart/index.js":"59","/Users/scooterok/www/rewivi-getcode/src/pages/JobList/index.js":"60","/Users/scooterok/www/rewivi-getcode/src/pages/Registration/index.js":"61","/Users/scooterok/www/rewivi-getcode/src/pages/Login/index.js":"62","/Users/scooterok/www/rewivi-getcode/src/pages/ContactUs/index.js":"63","/Users/scooterok/www/rewivi-getcode/src/core/constants.js":"64","/Users/scooterok/www/rewivi-getcode/src/core/actions/index.js":"65","/Users/scooterok/www/rewivi-getcode/src/pages/NotFound/index.js":"66","/Users/scooterok/www/rewivi-getcode/src/components/icons/index.js":"67","/Users/scooterok/www/rewivi-getcode/src/components/CreateJobStep1/index.js":"68","/Users/scooterok/www/rewivi-getcode/src/core/services/index.js":"69","/Users/scooterok/www/rewivi-getcode/src/components/LoginForm/index.js":"70","/Users/scooterok/www/rewivi-getcode/src/components/CreateJobStep2/index.js":"71","/Users/scooterok/www/rewivi-getcode/src/components/VideoPlayer/index.js":"72","/Users/scooterok/www/rewivi-getcode/src/components/UploadVideo/index.js":"73","/Users/scooterok/www/rewivi-getcode/src/components/RegistrationForm/index.js":"74","/Users/scooterok/www/rewivi-getcode/src/components/JobListTable/index.js":"75","/Users/scooterok/www/rewivi-getcode/src/core/actions/user.js":"76","/Users/scooterok/www/rewivi-getcode/src/components/Layout/Layout/index.js":"77","/Users/scooterok/www/rewivi-getcode/src/core/actions/postList.js":"78","/Users/scooterok/www/rewivi-getcode/src/core/actions/postCreated.js":"79","/Users/scooterok/www/rewivi-getcode/src/pages/NotFound/notFound.jsx":"80","/Users/scooterok/www/rewivi-getcode/src/components/JobListTable/columns.js":"81","/Users/scooterok/www/rewivi-getcode/src/components/InputAutocomlete/index.js":"82","/Users/scooterok/www/rewivi-getcode/src/components/Tags/index.js":"83","/Users/scooterok/www/rewivi-getcode/src/components/JobListTableFilter/index.js":"84","/Users/scooterok/www/rewivi-getcode/src/components/CreateJobTable/index.js":"85","/Users/scooterok/www/rewivi-getcode/src/components/Layout/Aside/index.js":"86","/Users/scooterok/www/rewivi-getcode/src/components/Layout/Header/index.js":"87","/Users/scooterok/www/rewivi-getcode/src/components/LangSelect/index.js":"88","/Users/scooterok/www/rewivi-getcode/src/components/HeaderSearch/index.js":"89","/Users/scooterok/www/rewivi-getcode/src/components/QuestionSearch/index.js":"90"},{"size":791,"mtime":1611681162198,"results":"91","hashOfConfig":"92"},{"size":362,"mtime":1609857379821,"results":"93","hashOfConfig":"92"},{"size":3082,"mtime":1611916272917,"results":"94","hashOfConfig":"92"},{"size":88,"mtime":1611680847996,"results":"95","hashOfConfig":"92"},{"size":2980,"mtime":1612199130815,"results":"96","hashOfConfig":"92"},{"size":427,"mtime":1611329440457,"results":"97","hashOfConfig":"92"},{"size":784,"mtime":1611413781628,"results":"98","hashOfConfig":"92"},{"size":6931,"mtime":1611563189075,"results":"99","hashOfConfig":"92"},{"size":1441,"mtime":1612270767361,"results":"100","hashOfConfig":"92"},{"size":897,"mtime":1610140297209,"results":"101","hashOfConfig":"92"},{"size":5157,"mtime":1612264789287,"results":"102","hashOfConfig":"92"},{"size":5553,"mtime":1612269863670,"results":"103","hashOfConfig":"92"},{"size":6028,"mtime":1612199649860,"results":"104","hashOfConfig":"92"},{"size":3340,"mtime":1611676908986,"results":"105","hashOfConfig":"92"},{"size":1351,"mtime":1612270772527,"results":"106","hashOfConfig":"92"},{"size":595,"mtime":1610450836817,"results":"107","hashOfConfig":"92"},{"size":3472,"mtime":1611656263884,"results":"108","hashOfConfig":"92"},{"size":13119,"mtime":1611309673223,"results":"109","hashOfConfig":"92"},{"size":1967,"mtime":1612270808904,"results":"110","hashOfConfig":"92"},{"size":357,"mtime":1611565833189,"results":"111","hashOfConfig":"92"},{"size":5370,"mtime":1612270812083,"results":"112","hashOfConfig":"92"},{"size":6289,"mtime":1612270640547,"results":"113","hashOfConfig":"92"},{"size":652,"mtime":1611136840989,"results":"114","hashOfConfig":"92"},{"size":1626,"mtime":1611681761321,"results":"115","hashOfConfig":"92"},{"size":3753,"mtime":1611514932566,"results":"116","hashOfConfig":"92"},{"size":895,"mtime":1611666976012,"results":"117","hashOfConfig":"92"},{"size":339,"mtime":1611430560183,"results":"118","hashOfConfig":"92"},{"size":424,"mtime":1611657585297,"results":"119","hashOfConfig":"92"},{"size":7864,"mtime":1612273458983,"results":"120","hashOfConfig":"92"},{"size":1117,"mtime":1612269005045,"results":"121","hashOfConfig":"92"},{"size":1161,"mtime":1611676778135,"results":"122","hashOfConfig":"92"},{"size":1620,"mtime":1611916155980,"results":"123","hashOfConfig":"92"},{"size":1848,"mtime":1611514835841,"results":"124","hashOfConfig":"92"},{"size":2079,"mtime":1611656347912,"results":"125","hashOfConfig":"92"},{"size":2269,"mtime":1611656333528,"results":"126","hashOfConfig":"92"},{"size":3137,"mtime":1612273845161,"results":"127","hashOfConfig":"92"},{"size":1139,"mtime":1611569126939,"results":"128","hashOfConfig":"92"},{"size":277,"mtime":1611661863713,"results":"129","hashOfConfig":"92"},{"size":262,"mtime":1611915026010,"results":"130","hashOfConfig":"92"},{"size":426,"mtime":1611502530060,"results":"131","hashOfConfig":"92"},{"size":764,"mtime":1612181078927,"results":"132","hashOfConfig":"92"},{"size":531,"mtime":1612268859029,"results":"133","hashOfConfig":"92"},{"size":721,"mtime":1611665524608,"results":"134","hashOfConfig":"92"},{"size":1335,"mtime":1611666589915,"results":"135","hashOfConfig":"92"},{"size":4337,"mtime":1612264019210,"results":"136","hashOfConfig":"92"},{"size":298,"mtime":1612273740156,"results":"137","hashOfConfig":"92"},{"size":791,"mtime":1612340729000,"results":"138","hashOfConfig":"139"},{"size":339,"mtime":1612340729000,"results":"140","hashOfConfig":"139"},{"size":88,"mtime":1612340729000,"results":"141","hashOfConfig":"139"},{"size":1139,"mtime":1612340729000,"results":"142","hashOfConfig":"139"},{"size":424,"mtime":1612340729000,"results":"143","hashOfConfig":"139"},{"size":764,"mtime":1612340729000,"results":"144","hashOfConfig":"139"},{"size":277,"mtime":1612340729000,"results":"145","hashOfConfig":"139"},{"size":1117,"mtime":1612340729000,"results":"146","hashOfConfig":"139"},{"size":1161,"mtime":1612340729000,"results":"147","hashOfConfig":"139"},{"size":3137,"mtime":1612340729000,"results":"148","hashOfConfig":"139"},{"size":2079,"mtime":1612340729000,"results":"149","hashOfConfig":"139"},{"size":5553,"mtime":1612340729000,"results":"150","hashOfConfig":"139"},{"size":2980,"mtime":1612340729000,"results":"151","hashOfConfig":"139"},{"size":357,"mtime":1612340729000,"results":"152","hashOfConfig":"139"},{"size":1626,"mtime":1612340729000,"results":"153","hashOfConfig":"139"},{"size":1620,"mtime":1612340729000,"results":"154","hashOfConfig":"139"},{"size":2269,"mtime":1612340729000,"results":"155","hashOfConfig":"139"},{"size":298,"mtime":1612340729000,"results":"156","hashOfConfig":"139"},{"size":895,"mtime":1612340729000,"results":"157","hashOfConfig":"139"},{"size":262,"mtime":1612340729000,"results":"158","hashOfConfig":"139"},{"size":6931,"mtime":1612340729000,"results":"159","hashOfConfig":"139"},{"size":6028,"mtime":1612340729000,"results":"160","hashOfConfig":"139"},{"size":7864,"mtime":1612340729000,"results":"161","hashOfConfig":"139"},{"size":1848,"mtime":1612340729000,"results":"162","hashOfConfig":"139"},{"size":3340,"mtime":1612340729000,"results":"163","hashOfConfig":"139"},{"size":652,"mtime":1612340729000,"results":"164","hashOfConfig":"139"},{"size":5157,"mtime":1612340729000,"results":"165","hashOfConfig":"139"},{"size":3753,"mtime":1612340729000,"results":"166","hashOfConfig":"139"},{"size":6289,"mtime":1612340729000,"results":"167","hashOfConfig":"139"},{"size":1335,"mtime":1612340729000,"results":"168","hashOfConfig":"139"},{"size":427,"mtime":1612340729000,"results":"169","hashOfConfig":"139"},{"size":721,"mtime":1612340729000,"results":"170","hashOfConfig":"139"},{"size":531,"mtime":1612340729000,"results":"171","hashOfConfig":"139"},{"size":426,"mtime":1612340729000,"results":"172","hashOfConfig":"139"},{"size":4337,"mtime":1612340729000,"results":"173","hashOfConfig":"139"},{"size":1351,"mtime":1612340729000,"results":"174","hashOfConfig":"139"},{"size":3472,"mtime":1612340729000,"results":"175","hashOfConfig":"139"},{"size":5370,"mtime":1612340729000,"results":"176","hashOfConfig":"139"},{"size":13119,"mtime":1612340729000,"results":"177","hashOfConfig":"139"},{"size":3082,"mtime":1612340729000,"results":"178","hashOfConfig":"139"},{"size":784,"mtime":1612340729000,"results":"179","hashOfConfig":"139"},{"size":897,"mtime":1612340729000,"results":"180","hashOfConfig":"139"},{"size":1441,"mtime":1612340729000,"results":"181","hashOfConfig":"139"},{"size":1967,"mtime":1612340729000,"results":"182","hashOfConfig":"139"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},"1afz21w",{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"185"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"185"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"185"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"185"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"185"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"185"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"185"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"185"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"185"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"185"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"185"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"185"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"185"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"185"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"185"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"185"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"185"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"185"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m49cig",{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/scooterok/www/rewivi/src/index.js",[],["384","385"],"/Users/scooterok/www/rewivi/src/reportWebVitals.js",[],["386","387"],"/Users/scooterok/www/rewivi/src/components/Layout/Aside/index.js",["388","389","390"],"import { Link } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\nimport { IconLibrary, IconSettings, IconCandidates, IconClients, IconPostings, IconReplies } from '../../icons/';\n\nimport MainLogo from '../../../assets/img/logo-white.svg';\nimport ProfilePhoto from '../../../assets/img/profile-photo.png';\n\nimport './style.scss';\nimport { useEffect, useState } from 'react';\n\nconst { SubMenu, Item } = Menu;\n\nexport default function Aside({ isLogged }) {\n  let location = useLocation();\n  const [currentMenu, setCurrentMenu] = useState('');\n\n  useEffect(() => {\n    switch (true) {\n      case location.pathname.includes('job-list') || location.pathname.includes('create-job-posting'):\n        setCurrentMenu('postings');\n        break;\n      default:\n        setCurrentMenu('');\n        break;\n    }\n  }, [location]);\n  if (isLogged) {\n    return (\n      <aside className=\"nav-left\">\n        <div className=\"nav__logo\">\n          <Link to=\"/\">\n            <img src={MainLogo} alt=\"\" />\n          </Link>\n        </div>\n        <div className=\"nav__scroll\">\n          <Menu mode=\"inline\" selectedKeys={[currentMenu]}>\n            <Item key=\"postings\" icon={<IconPostings />}>\n              <Link to=\"/job-list/\">Job postings</Link>\n            </Item>\n            <Item key=\"replies\" icon={<IconReplies />}>\n              <Link to=\"\">Replies</Link>\n            </Item>\n            <Item key=\"candidates\" icon={<IconCandidates />}>\n              <Link to=\"\">Candidates</Link>\n            </Item>\n            <Item key=\"clients\" icon={<IconClients />}>\n              <Link to=\"\">Clients</Link>\n            </Item>\n            <SubMenu key=\"library\" title=\"Library\" icon={<IconLibrary />}>\n              <Item key=\"library-questions\">\n                <Link to=\"\">Questions</Link>\n              </Item>\n              <Item key=\"library-replies\">\n                <Link to=\"\">Replies</Link>\n              </Item>\n            </SubMenu>\n            <Item icon={<IconSettings />}>\n              <Link to=\"\">Settings</Link>\n            </Item>\n          </Menu>\n          <div className=\"nav__profile\">\n            <img src={ProfilePhoto} alt=\"\" />\n            <Link to=\"\">Maria Dotsenko</Link>\n          </div>\n          <Menu mode=\"inline\" className=\"nav__footer\" defaultSelectedKeys={['']}>\n            <Item key=\"help\">\n              <Link to=\"\">Help</Link>\n            </Item>\n            <Item key=\"about\">\n              <Link to=\"\">About Rewivi</Link>\n            </Item>\n          </Menu>\n        </div>\n      </aside>\n    );\n  }\n\n  return (\n    <aside className=\"nav-left ligth\">\n      <div className=\"nav__logo\">\n        <Link to=\"/\">\n          <img src={MainLogo} alt=\"\" />\n        </Link>\n      </div>\n      <ul className=\"nav__psmenu\">\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n      </ul>\n      <div className=\"nav__scroll\">\n        <div className=\"nav__psprofile\">\n          <i></i>\n          <span></span>\n        </div>\n      </div>\n    </aside>\n  );\n}\n","/Users/scooterok/www/rewivi/src/utils/history.js",[],"/Users/scooterok/www/rewivi/src/pages/HowToStart/index.js",["391","392","393"],"import { useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Input, Form, Button } from 'antd';\n\nimport { postCreatedUpdate } from '../../core/actions';\n\nimport Layout from '../../components/Layout/Layout';\nimport UploadVideo from '../../components/UploadVideo';\nimport VideoPlayer from '../../components/VideoPlayer';\n\nimport video from '../../assets/videos/video.mp4';\n\nimport './style.scss';\n\nconst { TextArea } = Input;\n\nconst HowToStart = (props) => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onFinish = (values) => {\n    // updatePost(values);\n    dispatch(postCreatedUpdate(values));\n    history.push('/create-job-posting/');\n  };\n  const normFile = (e) => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  return (\n    <Layout className=\"how-to-start\" isLogged={true}>\n      <h1>How to start Talenttotal</h1>\n      <Row gutter={32}>\n        <Col span={11}>\n          <VideoPlayer src={video} />\n        </Col>\n        <Col span={13}>\n          <div className=\"how-to-start__form\">\n            <Form name=\"basic\" form={form} layout=\"vertical\" requiredMark={false} onFinish={onFinish}>\n              <div className=\"form-control\">\n                <Form.Item\n                  label=\"Name of the Vacant Position\"\n                  name=\"title\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your Name of the Vacant Position!',\n                    },\n                  ]}>\n                  <TextArea placeholder=\"Please add Name of the vacant position\" />\n                </Form.Item>\n              </div>\n\n              <Form.Item name=\"video\" valuePropName=\"fileList\" getValueFromEvent={normFile}>\n                <UploadVideo\n                  params={{}}\n                  getVideo={(file) => {\n                    form.setFieldsValue({\n                      video: file,\n                    });\n                  }}\n                />\n              </Form.Item>\n\n              <div className=\"form-control\">\n                <Form.Item\n                  label=\"Position description\"\n                  name=\"description\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your Position description!',\n                    },\n                  ]}>\n                  <TextArea placeholder=\"Please add Name of the vacant position\" showCount maxLength={100} />\n                </Form.Item>\n              </div>\n              <Form.Item>\n                <Button className=\"steps-continue\" htmlType=\"submit\">\n                  Continue\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default HowToStart;\n","/Users/scooterok/www/rewivi/src/components/Layout/Layout/index.js",[],"/Users/scooterok/www/rewivi/src/components/Layout/Header/index.js",[],"/Users/scooterok/www/rewivi/src/components/icons/index.js",[],"/Users/scooterok/www/rewivi/src/components/HeaderSearch/index.js",[],"/Users/scooterok/www/rewivi/src/components/LangSelect/index.js",[],"/Users/scooterok/www/rewivi/src/components/UploadVideo/index.js",["394","395","396"],"import { useState, useRef, useEffect } from 'react';\nimport { Row, Col, Upload } from 'antd';\nimport videojs from 'video.js';\nimport RecordRTC from 'recordrtc';\nimport Record from 'videojs-record/dist/videojs.record.js';\n\nimport ViderPlayer from '../VideoPlayer';\n\nimport iconUpload from '../../assets/img/icon-upload-video.svg';\nimport iconRec from '../../assets/img/icon-rec.svg';\n\nimport 'video.js/dist/video-js.min.css';\nimport 'videojs-record/dist/css/videojs.record.css';\nimport './style.scss';\n\nconst UploadVideo = ({ file, getVideo }) => {\n  const [videoScr, setVideoScr] = useState(null);\n  const [recordVidible, setRecordVidible] = useState(false);\n  const [fileList, setFileList] = useState(null);\n\n  const { Dragger } = Upload;\n\n  useEffect(() => {\n    //videoRecord();\n    if (file) {\n      setVideoScr(URL.createObjectURL(file));\n\n      setFileList([file]);\n    }\n  }, []);\n\n  const customRequest = ({ file, onSuccess }) => {\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      setVideoScr(e.target.result);\n      getVideo(file, e.target.result);\n    };\n\n    reader.readAsDataURL(file);\n    setFileList([file]);\n    onSuccess('ok');\n  };\n\n  const onRemove = (e) => {\n    setVideoScr(null);\n    setFileList([]);\n  };\n\n  const startRecord = () => {\n    setRecordVidible(true);\n    setTimeout(() => {\n      videoRecord();\n    }, 0);\n  };\n\n  const videoRecord = () => {\n    var options = {\n      controls: true,\n      bigPlayButton: false,\n      width: 1280,\n      plugins: {\n        record: {\n          audio: true,\n          video: true,\n          maxLength: 10,\n          displayMilliseconds: false,\n          debug: true,\n        },\n      },\n    };\n\n    // apply some workarounds for certain browsers\n    //applyVideoWorkaround();\n\n    var player = videojs('myVideo', options, function () {\n      // print version information at startup\n      var msg =\n        'Using video.js ' +\n        videojs.VERSION +\n        ' with videojs-record ' +\n        videojs.getPluginVersion('record') +\n        ' and recordrtc ' +\n        RecordRTC.version;\n      videojs.log(msg);\n    });\n\n    // error handling\n    player.on('deviceError', function () {\n      console.log('device error:', player.deviceErrorCode);\n    });\n\n    player.on('error', function (element, error) {\n      console.error(error);\n    });\n\n    // user clicked the record button and started recording\n    player.on('startRecord', function () {\n      console.log('started recording!');\n    });\n\n    // user completed recording and stream is available\n    player.on('finishRecord', function () {\n      // the blob object contains the recorded data that\n      // can be downloaded by the user, stored on server etc.\n      console.log('finished recording: ', player.recordedData);\n\n      const file = new File([player.recordedData], player.recordedData.name, { type: player.recordedData.type });\n\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        setRecordVidible(false);\n        setVideoScr(URL.createObjectURL(player.recordedData));\n        getVideo(file, e.target.result);\n        console.log(player);\n        player.record().destroy();\n      };\n\n      reader.readAsDataURL(file);\n      setFileList([file]);\n    });\n  };\n\n  // const props = {\n  //   name: \"file\",\n  //   multiple: true,\n  //   action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  //   onChange(info) {\n  //     const { status } = info.file;\n  //     if (status !== \"uploading\") {\n  //       console.log(info.file, info.fileList);\n  //     }\n  //     if (status === \"done\") {\n  //       message.success(`${info.file.name} file uploaded successfully.`);\n  //     } else if (status === \"error\") {\n  //       message.error(`${info.file.name} file upload failed.`);\n  //     }\n  //   },\n  // };\n\n  //videoRecord();\n\n  return (\n    <Row gutter={16}>\n      {!recordVidible && (\n        <Col span={videoScr ? 24 : 12}>\n          {videoScr && (\n            <div className=\"video-player-wrapper\">\n              <ViderPlayer src={videoScr} />\n            </div>\n          )}\n          <Dragger\n            className={`upload-dragger ${videoScr ? 'preview' : ''}`}\n            customRequest={customRequest}\n            onRemove={onRemove}\n            fileList={fileList}\n            accept=\"video/*\">\n            <p className=\"dragger--icon\">\n              <img src={iconUpload} alt=\"\" />\n            </p>\n            <p className=\"dragger--text\">Upload the video</p>\n          </Dragger>\n        </Col>\n      )}\n\n      {!videoScr && (\n        <Col span={recordVidible ? 24 : 12}>\n          <video\n            id=\"myVideo\"\n            playsInline\n            className=\"video-js vjs-default-skin video-record\"\n            style={{ display: recordVidible ? 'block' : 'none' }}></video>\n          {!recordVidible && (\n            <div className=\"record-video\" onClick={startRecord}>\n              <div className=\"record--icon\">\n                <img src={iconRec} alt=\"\" />\n              </div>\n              <div className=\"record--text\">Record the video</div>\n            </div>\n          )}\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nexport default UploadVideo;\n","/Users/scooterok/www/rewivi/src/pages/CreateJob/index.js",[],"/Users/scooterok/www/rewivi/src/components/CreateJobStep1/index.js",["397","398","399"],"import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Upload, Button, Popover, Form } from 'antd';\nimport UploadVideo from '../UploadVideo';\n\nimport InputAutocomplete from '../InputAutocomlete';\nimport { postCreatedUpdate } from '../../core/actions';\nimport { fetchUserQestions } from '../../core/services';\n\nimport Tags from '../Tags';\nimport { IconInfo } from '../icons';\n\nimport './style.scss';\n\nconst { TextArea } = Input;\n\nconst Step1 = ({ nextStep, updatePost, fetchUserQestions, preload }) => {\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    //fetchUserQestions();\n    console.log(preload);\n    fetchUserQestions();\n  }, []);\n\n  const customRequest = ({ file, onSuccess }) => {\n    form.setFieldsValue({\n      client_logo: file,\n    });\n    onSuccess('ok');\n  };\n  const onFinish = (values) => {\n    updatePost(values);\n    nextStep();\n    console.log(values);\n  };\n\n  const normFile = (e) => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  return (\n    <div className=\"create-job__step-1\">\n      <div className=\"steps-wrapper\">\n        <Form\n          name=\"basic\"\n          form={form}\n          layout=\"vertical\"\n          requiredMark={false}\n          onFinish={onFinish}\n          initialValues={{\n            title: preload.title,\n            description: preload.description,\n          }}>\n          <div className=\"form-control\">\n            <Form.Item\n              label=\"Name of the Vacant Position\"\n              name=\"title\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Name of the Vacant Position!',\n                },\n              ]}>\n              <TextArea placeholder=\"Please add Name of the vacant position\" />\n            </Form.Item>\n            <Popover\n              placement=\"right\"\n              content=\"This will be a title of the Questionnaire which candidate will see. Use the job title and some interesting details here\"\n              getPopupContainer={() => document.querySelector('.create-job')}>\n              <span className=\"popover-icon\">\n                <IconInfo />\n              </span>\n            </Popover>\n          </div>\n\n          <Form.Item name=\"video\" valuePropName=\"fileList\" getValueFromEvent={normFile}>\n            <UploadVideo\n              file={preload.video}\n              getVideo={(file) => {\n                form.setFieldsValue({\n                  video: file,\n                });\n              }}\n            />\n          </Form.Item>\n          <div className=\"form-control\">\n            <Form.Item\n              label=\"Position description\"\n              name=\"description\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Position description!',\n                },\n              ]}>\n              <TextArea placeholder=\"Please add Name of the vacant position\" showCount maxLength={100} />\n            </Form.Item>\n            <Popover\n              placement=\"right\"\n              content=\"This will be a title of the Questionnaire which candidate will see. Use the job title and some interesting details here\"\n              getPopupContainer={() => document.querySelector('.create-job')}>\n              <span className=\"popover-icon\">\n                <IconInfo />\n              </span>\n            </Popover>\n          </div>\n\n          <div className=\"steps__client\">\n            <Form.Item\n              name=\"client_name\"\n              label=\"Client\"\n              valuePropName=\"value\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Client!',\n                },\n              ]}>\n              <InputAutocomplete\n                placeholder=\"Company Name\"\n                onSelect={(e) => {\n                  form.setFieldsValue({\n                    client_name: e,\n                  });\n                }}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"client_description\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Company description!',\n                },\n              ]}>\n              <TextArea placeholder=\"Company description\" />\n            </Form.Item>\n            <Popover\n              placement=\"right\"\n              content={\n                <div>\n                  <p>\n                    Start typing. The company info can appear from the list of created you can create a new one. Manage\n                    the list in\n                  </p>\n                  <a href=\"\">Client space</a>\n                </div>\n              }\n              getPopupContainer={() => document.querySelector('.create-job')}>\n              <span className=\"popover-icon\">\n                <IconInfo />\n              </span>\n            </Popover>\n          </div>\n\n          <Form.Item name=\"client_logo\" hidden={true}>\n            <Input />\n          </Form.Item>\n\n          <div className=\"form-control\">\n            <Upload maxCount={1} customRequest={customRequest} accept=\"image/*\" className=\"steps-company-upload\">\n              <span>Upload company logo</span>\n            </Upload>\n          </div>\n\n          <Form.Item name=\"tags\" label=\"Tags\">\n            <div className=\"tags-control\">\n              <Tags />\n            </div>\n          </Form.Item>\n\n          <Form.Item>\n            <Button className=\"steps-continue\" htmlType=\"submit\">\n              Continue\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    preload: state.postCreate.post,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePost: (data) => {\n      dispatch(postCreatedUpdate(data));\n    },\n    fetchUserQestions: fetchUserQestions(dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Step1);\n","/Users/scooterok/www/rewivi/src/components/CreateJobStep2/index.js",["400"],"import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Popover, Select, Switch } from 'antd';\nimport SortableTable from '../CreateJobTable';\nimport { postCreatedUpdate } from '../../core/actions';\nimport { IconClose, IconInfo } from '../icons';\nimport './style.scss';\n\nconst { Option } = Select;\n\nconst Step2 = ({ updatePost, activatedButtons }) => {\n  const getData = (data) => {\n    const questions = [];\n    data.forEach((item) => {\n      questions.push(item.data);\n    });\n    updatePost({ questions: questions });\n    activatedButtons(!data.length);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div className=\"create-job__step-2\">\n      <div className=\"create-job__table\">\n        <SortableTable getData={getData} />\n      </div>\n      <div className=\"create-job__timing\">\n        <h2>Timing and additional preferences</h2>\n        <div className=\"form-control\">\n          <label>Min time for answer</label>\n          <Select\n            defaultValue=\"10\"\n            size=\"large\"\n            showArrow={false}\n            dropdownClassName=\"custom-select-dropdown\"\n            style={{ width: 120 }}>\n            <Option value=\"10\">10 sec</Option>\n            <Option value=\"20\">20 sec</Option>\n            <Option value=\"30\">30 sec</Option>\n            <Option value=\"40\">40 sec</Option>\n            <Option value=\"50\">50 sec</Option>\n            <Option value=\"60\">1 min</Option>\n          </Select>\n          <Popover\n            placement=\"right\"\n            content=\"Not all candidates can answer all the questions with video. You can configure this option on the question list as well.\"\n            getPopupContainer={() => document.querySelector('.create-job')}>\n            <span className=\"popover-icon\">\n              <IconInfo />\n            </span>\n          </Popover>\n        </div>\n        <div className=\"form-control\">\n          <label>Max time for answer</label>\n          <Select\n            defaultValue=\"1\"\n            size=\"large\"\n            showArrow={false}\n            dropdownClassName=\"custom-select-dropdown\"\n            style={{ width: 120 }}>\n            <Option value=\"1\">1 min</Option>\n            <Option value=\"2\">2 min</Option>\n            <Option value=\"3\">3 min</Option>\n            <Option value=\"4\">4 min</Option>\n            <Option value=\"5\">5 min</Option>\n          </Select>\n        </div>\n        <div className=\"form-control switch\">\n          <label>\n            <Switch size=\"small\" defaultChecked />\n            <span>Allow text substitution for all non-required questions</span>\n          </label>\n          <Popover\n            placement=\"right\"\n            content=\"Not all candidates can answer all the questions with video. You can configure this option on the question list as well.\"\n            getPopupContainer={() => document.querySelector('.create-job')}>\n            <span className=\"popover-icon\">\n              <IconInfo />\n            </span>\n          </Popover>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    postDetails: state.postCreate,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePost: (data) => {\n      dispatch(postCreatedUpdate(data));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Step2);\n","/Users/scooterok/www/rewivi/src/components/InputAutocomlete/index.js",[],"/Users/scooterok/www/rewivi/src/components/IconInfoSvg/index.js",[],["401","402"],"/Users/scooterok/www/rewivi/src/components/Tags/index.js",[],"/Users/scooterok/www/rewivi/src/components/CreateJobTable/index.js",[],"/Users/scooterok/www/rewivi/src/components/QuestionSearch/index.js",["403"],"import React, { useState, useRef, useEffect } from 'react';\nimport { Input, AutoComplete, Spin } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUserQestions } from '../../core/services';\n\nimport './style.scss';\n\nconst renderItem = (title) => {\n  return {\n    value: title,\n  };\n};\n\n// const options = [\n//   {\n//     label: \"Libraries\",\n//     options: [renderItem(\"Google\"), renderItem(\"Facebook\")],\n//   },\n//   {\n//     label: \"Solutions\",\n//     options: [renderItem(\"Scooterok\"), renderItem(\"amigo\")],\n//   },\n//   {\n//     label: \"Articles\",\n//     options: [renderItem(\"Hanz\"), renderItem(\"ScoobyDoo\")],\n//   },\n// ];\n\nconst options = [\n  {\n    value: 'Google',\n  },\n  {\n    value: 'Facebook',\n  },\n  {\n    value: 'Tesla',\n  },\n  {\n    value: 'SpaceX',\n  },\n];\n\nconst Complete = (props) => {\n  const [value, setValue] = useState('');\n  const [results, setResults] = useState([]);\n  const autoComplete = useRef();\n  const questionsList = useSelector((state) => {\n    return state.user;\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const list = [];\n    questionsList.questions.forEach((item) => {\n      list.push(renderItem(item.title));\n    });\n    setResults(list);\n  }, [questionsList]);\n\n  const onSelect = (value, option) => {\n    props.onSelect(value);\n    setValue('');\n    autoComplete.current.blur();\n  };\n\n  const onSearch = (val) => {\n    setValue(val);\n    fetchUserQestions(dispatch)(val);\n  };\n  return (\n    <div className=\"questions-autocomplete\">\n      <AutoComplete\n        dropdownClassName=\"certain-category-search-dropdown\"\n        onSearch={onSearch}\n        onSelect={onSelect}\n        notFoundContent={questionsList.loader ? <Spin size=\"small\" className=\"questions-autocomplete-spiner\" /> : null}\n        options={results}\n        ref={autoComplete}\n        value={value}>\n        <Input placeholder=\"Search...\" />\n      </AutoComplete>\n    </div>\n  );\n};\n\nexport default Complete;\n","/Users/scooterok/www/rewivi/src/pages/JobList/index.js",["404","405"],"import { useState } from 'react';\nimport { Button } from 'antd';\n\nimport Layout from '../../components/Layout/Layout';\nimport JobListTable from '../../components/JobListTable';\n\nimport './style.scss';\n\nconst JobList = () => {\n  return (\n    <Layout className=\"job-list\" isLogged={true}>\n      <JobListTable />\n    </Layout>\n  );\n};\n\nexport default JobList;\n","/Users/scooterok/www/rewivi/src/components/JobListTableFilter/index.js",["406","407","408","409","410","411","412"],"import { useEffect, useState } from 'react';\nimport { Button, Drawer, Input } from 'antd';\n\nimport IconFilterButton from '../../assets/img/filter-blue.svg';\n\nimport { IconClose, IconDelete } from '../icons';\n\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\n\nimport './style.scss';\n\nconst JobListTableFilter = ({ data, setResults }) => {\n  const [visible, setVisible] = useState(false);\n  const [tagsList, setTagsList] = useState([]);\n  const [filterResults, setFilterResults] = useState([]);\n  const [checkboxs, setCheckboxs] = useState({\n    status: {\n      Published: false,\n      Draft: false,\n    },\n  });\n  const [filters, setFilter] = useState({});\n  const [filterClear, setFilterClear] = useState(true);\n  const [resultsCount, setResultsCount] = useState(data.length);\n\n  useEffect(() => {\n    let tags = [];\n    data.forEach((item) => {\n      tags = [...tags, ...item.tags];\n      setCheckboxs({\n        ...checkboxs,\n      });\n    });\n    setTagsList(Array.from(new Set(tags)));\n  }, []);\n\n  useEffect(() => {\n    let chackList = { ...checkboxs };\n    let filterList = { ...filters };\n    tagsList.forEach((tag) => {\n      chackList[tag] = false;\n      filterList[tag] = null;\n    });\n    setCheckboxs(chackList);\n    setFilter(filterList);\n  }, [tagsList]);\n\n  useEffect(() => {\n    let result = {};\n    if (checkboxs.status.Published) {\n      result = {\n        ...result,\n        status: {\n          ...result.status,\n          published: true,\n        },\n      };\n    }\n    if (checkboxs.status.Draft) {\n      result = {\n        ...result,\n        status: {\n          ...result.status,\n          draft: true,\n        },\n      };\n    }\n    setFilter(result);\n  }, [checkboxs]);\n\n  const chackOnChange = (e, category, name) => {\n    const checks = { ...checkboxs };\n    checks[category][name] = e.target.checked;\n    setCheckboxs(checks);\n  };\n\n  const clearAll = () => {\n    const chacks = { ...checkboxs };\n    for (let i in chacks.status) {\n      chacks.status[i] = false;\n    }\n    setCheckboxs(chacks);\n  };\n\n  return (\n    <>\n      <Button\n        type=\"text\"\n        className=\"actions--filter\"\n        onClick={() => {\n          setVisible(true);\n        }}>\n        <span>Filters</span>\n        <img src={IconFilterButton} alt=\"\" />\n      </Button>\n      <Drawer\n        placement=\"right\"\n        className=\"job-list-table__filter\"\n        width={507}\n        closable={true}\n        closeIcon={<IconClose />}\n        onClose={() => {\n          setVisible(false);\n        }}\n        visible={visible}>\n        <div className=\"filter--title\">\n          <span>Filters</span>\n          <Button type=\"text\" onClick={clearAll}>\n            Clear all\n          </Button>\n          <Button\n            type=\"primary\"\n            className=\"full\"\n            onClick={() => {\n              setResults(filters);\n              setVisible(false);\n            }}>\n            Show results {resultsCount === 0 ? '' : `(${resultsCount})`}\n          </Button>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-group--title\">Status</div>\n          <div className=\"form-control\">\n            <label>\n              <Checkbox\n                onChange={(e) => {\n                  chackOnChange(e, 'status', 'Published');\n                }}\n                checked={checkboxs.status.Published}\n              />\n              <span>Published</span>\n            </label>\n          </div>\n          <div className=\"form-control\">\n            <label>\n              <Checkbox\n                onChange={(e) => {\n                  chackOnChange(e, 'status', 'Draft');\n                }}\n                checked={checkboxs.status.Draft}\n              />\n              <span>Draft</span>\n            </label>\n          </div>\n        </div>\n        {tagsList.length > 0 && (\n          <div className=\"form-group\">\n            <div className=\"form-group--title\">Tags</div>\n            <ul className=\"filter--tags-list\">\n              {tagsList.map((tag) => (\n                <li key={tag}>\n                  <div className=\"form-control\">\n                    <label>\n                      <Checkbox\n                        onChange={(e) => {\n                          chackOnChange(e, 'tags', tag);\n                        }}\n                        checked={checkboxs[tag]}\n                        data-scooterok={checkboxs[tag]}\n                      />\n                      <span>{tag}</span>\n                    </label>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        <div className=\"form-group\">\n          <div className=\"form-control\">\n            <label>\n              <Checkbox />\n              <span>Hide questionnaires without replies</span>\n            </label>\n          </div>\n        </div>\n        <div className=\"form-group includes-question\">\n          <div className=\"form-group--title\">Includes question</div>\n          <div className=\"form-control\">\n            <label>Vacant position</label>\n            <Input placeholder=\"Please add Name of the vacant position\" />\n          </div>\n          <div className=\"yourself\">\n            <span>How would you describe yourself?</span>\n            <button>\n              <IconDelete />\n            </button>\n          </div>\n        </div>\n      </Drawer>\n    </>\n  );\n};\n\nexport default JobListTableFilter;\n","/Users/scooterok/www/rewivi/src/components/JobListTable/index.js",["413","414","415","416","417","418","419","420"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Button, Tag, Tooltip, Dropdown, Menu, Pagination } from 'antd';\nimport { fetchPosts, fetchPostDelete } from '../../core/services';\nimport { withRouter } from 'react-router-dom';\nimport { columns } from './columns';\n\nimport JobListTableFilter from '../JobListTableFilter';\n\nimport { IconShare, IconPause, IconPlay, IconDelete, IconClose } from '../icons';\n\nimport './style.scss';\nimport Modal from 'antd/lib/modal/Modal';\n\nclass JobListTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [],\n      filterSource: [],\n      deleteModal: false,\n      deleteId: null,\n      pagination: {\n        current: 1,\n        total: 0,\n        pageSize: 0,\n      },\n      postStatus: {\n        1: 'DRAFT',\n        2: 'PUBLISHED',\n        3: 'UNPUBLISHED',\n        4: 'PAUSED',\n      },\n      sorter: {},\n      filter: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n  componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.postsList) !== JSON.stringify(this.props.postsList) && this.props.postsList.data) {\n      const editPostList = JSON.parse(JSON.stringify(this.props.postsList.data));\n      editPostList.map((item) => (item.key = '' + item.id));\n      if (this.props.postsList.last_page < this.props.postsList.current_page) {\n        this.props.fetchPosts(`?&page=${this.props.postsList.last_page}`);\n      } else {\n        this.setState({\n          dataSource: editPostList,\n          filterSource: editPostList,\n          pagination: {\n            current: this.props.postsList.current_page,\n            total: this.props.postsList.total,\n            pageSize: this.props.postsList.per_page,\n          },\n        });\n      }\n    }\n  }\n\n  setResults = (results) => {\n    this.setState({\n      filter: results,\n    });\n    setTimeout(() => {\n      this.updateTable();\n    }, 0);\n    // this.setState({\n    //   filterSource: results.length ? results : this.state.dataSource,\n    // });\n  };\n\n  onDeleteModal = (id) => {\n    this.setState({\n      deleteId: id,\n    });\n    this.setState({\n      deleteModal: true,\n    });\n  };\n  onDelete = () => {\n    const id = this.state.deleteId;\n    this.props.fetchPostDelete(id).then((error) => {\n      if (!error) this.updateTable();\n    });\n    this.setState({\n      deleteModal: false,\n    });\n  };\n\n  updateTable() {\n    let params = '?';\n    for (let i in this.state.sorter) {\n      params = `${params}sort=${this.state.sorter[i] === 'descend' ? '-' : ''}${i}`;\n    }\n    for (let i in this.state.filter) {\n      params = `${params}&filter[${i}]=`;\n      for (let n in this.state.filter[i]) {\n        params = `${params}${n === 'published' ? 2 : 1},`;\n      }\n    }\n    params = `${params}&page=${this.state.pagination.current}`;\n    this.props.fetchPosts(params);\n  }\n\n  handleChange(pagination, filters, sorter, extra) {\n    const status = {};\n    if (sorter.order) status[sorter.field] = sorter.order;\n    this.setState({\n      sorter: status,\n    });\n    setTimeout(() => {\n      this.updateTable();\n    }, 0);\n  }\n\n  paginationOnChange(page) {\n    this.setState({\n      pagination: {\n        ...this.state.pagination,\n        current: page,\n      },\n    });\n    setTimeout(() => {\n      this.updateTable();\n    }, 0);\n  }\n\n  render() {\n    return (\n      <div className=\"job-list-table\">\n        <div className=\"job-list-table__actions\">\n          <JobListTableFilter data={this.state.dataSource} setResults={this.setResults} />\n          {/* <Select\n            defaultValue=\"latest\"\n            size=\"large\"\n            showArrow={false}\n            className=\"actions--select\"\n            dropdownClassName=\"custom-select-dropdown\"\n            style={{ width: 200 }}>\n            <Option value=\"latest\">Latest</Option>\n            <Option value=\"newtest\">Newtest</Option>\n          </Select> */}\n          <Button\n            type=\"primary\"\n            className=\"full\"\n            onClick={() => {\n              this.props.history.push('/create-job-posting/');\n            }}>\n            Create new\n          </Button>\n        </div>\n        <Table\n          columns={columns(this.onDeleteModal, this.state.postStatus)}\n          dataSource={this.state.dataSource}\n          onChange={(pagination, filters, sorter, extra) => {\n            this.handleChange(pagination, filters, sorter, extra);\n          }}\n          pagination={false}\n          //scroll={{ x: true }}\n          loading={this.props.postsLoading}\n        />\n        {this.state.pagination.total > 10 && (\n          <Pagination\n            current={this.state.pagination.current}\n            total={this.state.pagination.total}\n            pageSize={this.state.pagination.pageSize}\n            onChange={(page) => {\n              this.paginationOnChange(page);\n            }}\n          />\n        )}\n        <Modal\n          visible={this.state.deleteModal}\n          closable={true}\n          width={610}\n          className=\"delete-modal\"\n          closeIcon={<IconClose />}\n          footer={[\n            <Button\n              key=\"back\"\n              type=\"text\"\n              onClick={() => {\n                this.setState({ deleteModal: false });\n              }}>\n              Pause\n            </Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={this.onDelete}>\n              Delete\n            </Button>,\n          ]}\n          onCancel={() => {\n            this.setState({ deleteModal: false });\n          }}>\n          <div className=\"modal__title\">Are you sure you want to delete the job posting?</div>\n          <div className=\"modal__text\">\n            If you delete — you lost the time of camplaing, You can pause it for 30 days maximun and turn on any time\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ postsList }) {\n  return {\n    postsList: postsList.postList,\n    postsLoading: postsList.loader,\n    postsLoadingError: postsList.error,\n    deleteSuccess: postsList.deleteSuccess,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPosts: fetchPosts(dispatch),\n    fetchPostDelete: fetchPostDelete(dispatch),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(JobListTable));\n","/Users/scooterok/www/rewivi/src/components/VideoPlayer/index.js",[],"/Users/scooterok/www/rewivi/src/pages/Registration/index.js",["421"],"import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Layout from '../../components/Layout/Layout';\nimport RegistrationForm from '../../components/RegistrationForm';\n\nimport { fetchRegistration } from '../../core/services';\n\nimport './style.scss';\nimport { notification } from 'antd';\nimport { IconWarning } from '../../components/icons';\nimport { clearUserData } from '../../core/actions';\n\nconst HowToStart = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const loader = useSelector((state) => {\n    return state.user.loader;\n  });\n  const success = useSelector((state) => {\n    return state.user.success;\n  });\n  const error = useSelector((state) => {\n    return state.user.error;\n  });\n\n  useEffect(() => {\n    if (success) history.push('/how-to-start/');\n    if (error) {\n      notification.error({\n        className: 'error-message',\n        description: error,\n        icon: <IconWarning />,\n        onClose: () => {\n          dispatch(clearUserData());\n        },\n      });\n    }\n  }, [success, error]);\n\n  const registrationRequest = (data) => {\n    fetchRegistration(dispatch)(data);\n  };\n\n  return (\n    <Layout isLogged={false} className=\"hello-page\">\n      <div className=\"hello-page__wrapper\">\n        <h1>Log in or create your account to find the best candidate quickly</h1>\n        <div className=\"hello-page__form\">\n          <RegistrationForm registrationRequest={registrationRequest} loading={loader} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default HowToStart;\n","/Users/scooterok/www/rewivi/src/components/RegistrationForm/index.js",[],"/Users/scooterok/www/rewivi/src/core/actions/index.js",[],"/Users/scooterok/www/rewivi/src/store.js",["422"],"import { createStore, applyMiddleware } from 'redux';\n//import thunkMiddleware from 'redux-thunk';\n\nimport reducer from './core/reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\nexport default store;\n","/Users/scooterok/www/rewivi/src/core/reducers/index.js",[],"/Users/scooterok/www/rewivi/src/core/services/index.js",["423"],"/Users/scooterok/www/rewivi/src/core/reducers/postCreateReducer.js",[],"/Users/scooterok/www/rewivi/src/core/reducers/postsListReducer.js",[],"/Users/scooterok/www/rewivi/src/pages/Login/index.js",["424","425","426","427","428","429"],"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { notification } from 'antd';\nimport Layout from '../../components/Layout/Layout';\nimport LoginForm from '../../components/LoginForm';\n\nimport { fetchLogin } from '../../core/services';\nimport { clearUserData } from '../../core/actions';\n\nimport './style.scss';\nimport { IconWarning } from '../../components/icons';\n\nconst LoginPage = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const loader = useSelector((state) => {\n    return state.user.loader;\n  });\n  const success = useSelector((state) => {\n    return state.user.success;\n  });\n  const error = useSelector((state) => {\n    return state.user.error;\n  });\n\n  // useEffect(() => {\n  //   if (success) history.push('/job-list/');\n  //   if (error) {\n  //     notification.error({\n  //       className: 'error-message',\n  //       description: error,\n  //       icon: <IconWarning />,\n  //       onClose: () => {\n  //         dispatch(clearUserData());\n  //       },\n  //     });\n  //   }\n  // }, [success, error]);\n\n  const loginRequest = (loginData) => {\n    fetchLogin(dispatch)(loginData, history);\n  };\n\n  return (\n    <Layout isLogged={false} className=\"hello-page\">\n      <div className=\"hello-page__wrapper\">\n        <h1>\n          Find the best candidate <br /> with Rewivi\n        </h1>\n        <div className=\"hello-page__form\">\n          <LoginForm loginRequest={loginRequest} loading={loader} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default LoginPage;\n","/Users/scooterok/www/rewivi/src/components/LoginForm/index.js",["430","431"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom/';\nimport { Form, Input, Button, Checkbox, Select } from 'antd';\nconst { Option } = Select;\n\nclass Signup extends Component {\n  render() {\n    return (\n      <div className=\"hello-form\">\n        <Form\n          name=\"basic\"\n          layout=\"vertical\"\n          requiredMark={false}\n          onFinish={(data) => {\n            this.props.loginRequest(data);\n          }}\n          //onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Your Email\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: 'email',\n                message: 'Please input your email!',\n              },\n            ]}>\n            <Input placeholder=\"Please add your email\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Your Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}>\n            <Input.Password placeholder=\"Please create your password\" />\n          </Form.Item>\n\n          <Form.Item className=\"hello-form__submit\">\n            <Button type=\"primary\" htmlType=\"submit\" loading={this.props.loading}>\n              Start\n            </Button>\n          </Form.Item>\n        </Form>\n        <div className=\"hello-form__link\">\n          <Link to=\"/password-recovery/\">Forgot the password?</Link>\n        </div>\n        <div className=\"hello-form__footer-link\">\n          New in Rewivi? <Link to=\"/sign-up/\">Sign up here</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(null, mapDispatchToProps)(Signup);\n","/Users/scooterok/www/rewivi/src/pages/PasswordRecovery/index.js",["432"],"import { Button, Form, Input } from 'antd';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../components/Layout/Layout';\n\nimport LoginForm from '../../components/LoginForm';\n\nimport './style.scss';\n\nconst HowToStart = (props) => {\n  const [success, setSuccess] = useState(false);\n\n  const onFinish = (form) => {\n    setSuccess(true);\n  };\n\n  if (success) {\n    return (\n      <Layout isLogged={false} className=\"hello-page\">\n        <div className=\"hello-page__wrapper\">\n          <h1>Recovery link is on your email</h1>\n          <div className=\"hello-page__sub-title\">Don’t see it?</div>\n          <div className=\"recovery-instruction\">\n            <ol>\n              <li>Check Spam folder</li>\n              <li>\n                <Link to=\"\">Click here and we resend the link</Link>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout isLogged={false} className=\"hello-page\">\n      <div className=\"hello-page__wrapper\">\n        <h1>Password recovery</h1>\n        <div className=\"hello-page__sub-title\">Type your email and we send you a recovery link</div>\n        <div className=\"hello-page__form\">\n          <div className=\"hello-form\">\n            <Form name=\"basic\" layout=\"vertical\" requiredMark={false} onFinish={onFinish}>\n              <Form.Item\n                label=\"Your Email\"\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    type: 'email',\n                    message: 'Please input your username!',\n                  },\n                ]}>\n                <Input placeholder=\"Please add your email\" autoComplete=\"off\" />\n              </Form.Item>\n              <Form.Item className=\"hello-form__submit\">\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Get a link\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default HowToStart;\n","/Users/scooterok/www/rewivi/src/pages/ContactUs/index.js",["433","434"],"import { Button, Form, Input } from 'antd';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../components/Layout/Layout';\n\nimport LoginForm from '../../components/LoginForm';\n\nimport './style.scss';\n\nconst HowToStart = (props) => {\n  const [success, setSuccess] = useState(false);\n\n  const onFinish = (form) => {\n    setSuccess(true);\n  };\n\n  if (success) {\n    return (\n      <Layout isLogged={false} className=\"hello-page\">\n        <div className=\"hello-page__wrapper\">\n          <h1 className=\"thank-you\">Thank you! </h1>\n          <div className=\"contact-us__request-message\">\n            Check your email, we’ll <br /> answer soon\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout isLogged={false} className=\"hello-page\">\n      <div className=\"hello-page__wrapper\">\n        <h1>For any question — contact us</h1>\n        <div className=\"hello-page__form\">\n          <div className=\"hello-form\">\n            <Form name=\"basic\" layout=\"vertical\" requiredMark={false} onFinish={onFinish}>\n              <Form.Item\n                label=\"Your Email\"\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    type: 'email',\n                    message: 'Please input your username!',\n                  },\n                ]}>\n                <Input placeholder=\"Please add your email\" autoComplete=\"off\" />\n              </Form.Item>\n              <Form.Item\n                label=\"Your request\"\n                name=\"request\"\n                className=\"contact-us__request-fuild\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your username!',\n                  },\n                ]}>\n                <Input.TextArea placeholder=\"Please add your request\" autoComplete=\"off\" />\n              </Form.Item>\n              <Form.Item className=\"hello-form__submit\">\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                  Request answer\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default HowToStart;\n","/Users/scooterok/www/rewivi/src/core/reducers/userReducer.js",[],"/Users/scooterok/www/rewivi/src/core/routes/index.js",["435"],"import { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport HowToStart from '../../pages/HowToStart';\nimport CreateJob from '../../pages/CreateJob';\nimport JobList from '../../pages/JobList';\nimport Registration from '../../pages/Registration';\nimport Login from '../../pages/Login';\nimport PasswordRecovery from '../../pages/PasswordRecovery';\nimport ContactUs from '../../pages/ContactUs';\nimport CoreRouter from './CoreRouter';\nimport PrivateRoute from './PrivatRouter';\n\nconst routes = () => {\n  return (\n    <CoreRouter>\n      <Route exact path=\"/\" component={Registration} />\n      <Route exact path=\"/sign-up/\" component={Registration} />\n      <Route exact path=\"/sign-in/\" component={Login} />\n      <Route exact path=\"/password-recovery/\" component={PasswordRecovery} />\n      <Route exact path=\"/contact-us/\" component={ContactUs} />\n      <PrivateRoute exact path=\"/how-to-start/\" component={HowToStart} />\n      <PrivateRoute exact path=\"/create-job-posting/\" component={CreateJob} />\n      <PrivateRoute exact path=\"/job-list/\" component={JobList} />\n    </CoreRouter>\n  );\n};\n\nexport default routes;\n","/Users/scooterok/www/rewivi/src/core/routes/CoreRouter.js",[],"/Users/scooterok/www/rewivi/src/pages/NotFound/index.js",[],"/Users/scooterok/www/rewivi/src/pages/NotFound/notFound.jsx",["436"],"import React from 'react';\nimport './style.scss';\n\nexport default function () {\n  return (\n    <div className=\"ui container not-found\">\n      <div className=\"wrapper ui icon message\">\n        <i className=\"warning sign icon\" />\n        <div className=\"content\">\n          <div className=\"header\">Page not found</div>\n          <p>The page your are looking for does not exists</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/scooterok/www/rewivi/src/core/routes/PrivatRouter.js",[],"/Users/scooterok/www/rewivi/src/core/actions/postCreated.js",[],"/Users/scooterok/www/rewivi/src/core/actions/postList.js",[],"/Users/scooterok/www/rewivi/src/core/actions/user.js",[],"/Users/scooterok/www/rewivi/src/components/JobListTable/columns.js",["437"],"import { Dropdown, Menu, Tag, Tooltip } from 'antd';\nimport { IconDelete, IconPause, IconPlay, IconShare } from '../icons';\n\nconst columns = (onDeleteModal, postStatus) => {\n  return [\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      className: 'status',\n      key: 'status',\n      render: (status) => {\n        console.log(postStatus[status]);\n        let color;\n        if (status === 'Expired') {\n          color = '#f22245';\n        }\n        return <span style={{ color: color }}>{postStatus[status]}</span>;\n      },\n      sorter: (a, b) => 0,\n      showSorterTooltip: false,\n      ellipsis: true,\n    },\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      className: 'title',\n      width: '20%',\n      key: 'title',\n      sorter: (a, b) => 0,\n      showSorterTooltip: false,\n      ellipsis: true,\n    },\n    {\n      title: 'Tags',\n      key: 'tags',\n      dataIndex: 'tags',\n      width: '30%',\n      className: 'tags',\n      render: (tags) => {\n        tags.sort();\n        const colors = [\n          'volcano',\n          'blue',\n          'green',\n          'red',\n          'orange',\n          'gold',\n          'magenta',\n          'lime',\n          'cyan',\n          'geekblue',\n          'purple',\n        ];\n        if (tags.length > 3) {\n          const menu = (\n            <Menu>\n              {tags.map((tag, i) => {\n                const color = i < colors.length ? colors[i] : colors[i - colors.length];\n                if (i > 1) {\n                  return (\n                    <Menu.Item key={`item-${i}`}>\n                      <Tag color={color}>{tag.toUpperCase()}</Tag>\n                    </Menu.Item>\n                  );\n                }\n              })}\n            </Menu>\n          );\n          return (\n            <>\n              {tags.map((tag, i) => {\n                return <span key={`tag-${i}`}>{i < 2 && <Tag color={colors[i]}>{tag.toUpperCase()}</Tag>}</span>;\n              })}\n              <Dropdown overlayClassName=\"tags-dropdown\" placement=\"bottomCenter\" overlay={menu}>\n                <span className=\"ant-dropdown-link\">+ {tags.length - 2} tags</span>\n              </Dropdown>\n            </>\n          );\n        } else {\n          return (\n            <>\n              {tags.map((tag, i) => {\n                return (\n                  <Tag color={colors[i]} key={`tag-${i}`}>\n                    {tag.toUpperCase()}\n                  </Tag>\n                );\n              })}\n            </>\n          );\n        }\n      },\n      sorter: (a, b) => 0,\n      showSorterTooltip: false,\n      ellipsis: { showTitle: true },\n    },\n    {\n      title: 'Will finish in',\n      dataIndex: 'will_finish_in',\n      className: 'finish',\n      key: 'finish',\n      sorter: (a, b) => 0,\n      showSorterTooltip: false,\n      ellipsis: true,\n    },\n    {\n      title: 'Created',\n      dataIndex: 'created_at',\n      className: 'created',\n      key: 'created',\n      render: (date) => {\n        function convertDate(inputFormat) {\n          function pad(s) {\n            return s < 10 ? '0' + s : s;\n          }\n          var d = new Date(inputFormat);\n          return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('.');\n        }\n        return convertDate(date);\n      },\n      sorter: (a, b) => 0,\n      showSorterTooltip: false,\n      ellipsis: true,\n    },\n    {\n      title: 'Action',\n      className: 'action',\n      width: 140,\n      key: 'action',\n      render: (text, record) => {\n        return (\n          <div className=\"table--actions\">\n            <Tooltip title=\"Share\">\n              <button>\n                <IconShare />\n              </button>\n            </Tooltip>\n            {record.paused ? (\n              <Tooltip title=\"Prolong\">\n                <button>\n                  <IconPlay />\n                </button>\n              </Tooltip>\n            ) : (\n              <Tooltip title=\"Pause\">\n                <button>\n                  <IconPause />\n                </button>\n              </Tooltip>\n            )}\n\n            <Tooltip title=\"Delete\">\n              <button\n                onClick={() => {\n                  onDeleteModal(record.id);\n                }}>\n                <IconDelete />\n              </button>\n            </Tooltip>\n          </div>\n        );\n      },\n    },\n  ];\n};\n\nexport { columns };\n","/Users/scooterok/www/rewivi/src/core/constants.js",[],"/Users/scooterok/www/rewivi-getcode/src/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/store.js",["438"],"/Users/scooterok/www/rewivi-getcode/src/utils/history.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/routes/index.js",["439"],"/Users/scooterok/www/rewivi-getcode/src/core/reducers/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/routes/PrivatRouter.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/routes/CoreRouter.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/reducers/postCreateReducer.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/reducers/postsListReducer.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/reducers/userReducer.js",[],"/Users/scooterok/www/rewivi-getcode/src/pages/PasswordRecovery/index.js",["440"],"/Users/scooterok/www/rewivi-getcode/src/pages/CreateJob/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/pages/HowToStart/index.js",["441","442","443"],"/Users/scooterok/www/rewivi-getcode/src/pages/JobList/index.js",["444","445"],"/Users/scooterok/www/rewivi-getcode/src/pages/Registration/index.js",["446"],"/Users/scooterok/www/rewivi-getcode/src/pages/Login/index.js",["447","448","449","450","451","452"],"/Users/scooterok/www/rewivi-getcode/src/pages/ContactUs/index.js",["453","454"],"/Users/scooterok/www/rewivi-getcode/src/core/constants.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/actions/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/pages/NotFound/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/icons/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/CreateJobStep1/index.js",["455","456","457"],"/Users/scooterok/www/rewivi-getcode/src/core/services/index.js",["458"],"/Users/scooterok/www/rewivi-getcode/src/components/LoginForm/index.js",["459","460"],"/Users/scooterok/www/rewivi-getcode/src/components/CreateJobStep2/index.js",["461"],"/Users/scooterok/www/rewivi-getcode/src/components/VideoPlayer/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/UploadVideo/index.js",["462","463","464"],"/Users/scooterok/www/rewivi-getcode/src/components/RegistrationForm/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/JobListTable/index.js",["465","466","467","468","469","470","471","472"],"/Users/scooterok/www/rewivi-getcode/src/core/actions/user.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/Layout/Layout/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/actions/postList.js",[],"/Users/scooterok/www/rewivi-getcode/src/core/actions/postCreated.js",[],"/Users/scooterok/www/rewivi-getcode/src/pages/NotFound/notFound.jsx",["473"],"/Users/scooterok/www/rewivi-getcode/src/components/JobListTable/columns.js",["474"],"/Users/scooterok/www/rewivi-getcode/src/components/InputAutocomlete/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/Tags/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/JobListTableFilter/index.js",["475","476","477","478","479","480","481"],"/Users/scooterok/www/rewivi-getcode/src/components/CreateJobTable/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/Layout/Aside/index.js",["482","483","484"],"/Users/scooterok/www/rewivi-getcode/src/components/Layout/Header/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/LangSelect/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/HeaderSearch/index.js",[],"/Users/scooterok/www/rewivi-getcode/src/components/QuestionSearch/index.js",["485"],{"ruleId":"486","replacedBy":"487"},{"ruleId":"488","replacedBy":"489"},{"ruleId":"486","replacedBy":"490"},{"ruleId":"488","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":3,"column":27,"nodeType":"494","messageId":"495","endLine":3,"endColumn":33},{"ruleId":"492","severity":1,"message":"496","line":3,"column":35,"nodeType":"494","messageId":"495","endLine":3,"endColumn":41},{"ruleId":"492","severity":1,"message":"497","line":3,"column":43,"nodeType":"494","messageId":"495","endLine":3,"endColumn":48},{"ruleId":"492","severity":1,"message":"498","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":18},{"ruleId":"492","severity":1,"message":"499","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":17},{"ruleId":"492","severity":1,"message":"500","line":2,"column":19,"nodeType":"494","messageId":"495","endLine":2,"endColumn":30},{"ruleId":"492","severity":1,"message":"501","line":1,"column":20,"nodeType":"494","messageId":"495","endLine":1,"endColumn":26},{"ruleId":"492","severity":1,"message":"502","line":5,"column":8,"nodeType":"494","messageId":"495","endLine":5,"endColumn":14},{"ruleId":"503","severity":1,"message":"504","line":30,"column":6,"nodeType":"505","endLine":30,"endColumn":8,"suggestions":"506"},{"ruleId":"492","severity":1,"message":"498","line":1,"column":21,"nodeType":"494","messageId":"495","endLine":1,"endColumn":29},{"ruleId":"503","severity":1,"message":"507","line":24,"column":6,"nodeType":"505","endLine":24,"endColumn":8,"suggestions":"508"},{"ruleId":"509","severity":1,"message":"510","line":150,"column":19,"nodeType":"511","endLine":150,"endColumn":30},{"ruleId":"492","severity":1,"message":"512","line":6,"column":10,"nodeType":"494","messageId":"495","endLine":6,"endColumn":19},{"ruleId":"486","replacedBy":"513"},{"ruleId":"488","replacedBy":"514"},{"ruleId":"492","severity":1,"message":"515","line":29,"column":7,"nodeType":"494","messageId":"495","endLine":29,"endColumn":14},{"ruleId":"492","severity":1,"message":"498","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":18},{"ruleId":"492","severity":1,"message":"516","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":16},{"ruleId":"492","severity":1,"message":"517","line":15,"column":10,"nodeType":"494","messageId":"495","endLine":15,"endColumn":23},{"ruleId":"492","severity":1,"message":"518","line":15,"column":25,"nodeType":"494","messageId":"495","endLine":15,"endColumn":41},{"ruleId":"492","severity":1,"message":"519","line":23,"column":10,"nodeType":"494","messageId":"495","endLine":23,"endColumn":21},{"ruleId":"492","severity":1,"message":"520","line":23,"column":23,"nodeType":"494","messageId":"495","endLine":23,"endColumn":37},{"ruleId":"492","severity":1,"message":"521","line":24,"column":24,"nodeType":"494","messageId":"495","endLine":24,"endColumn":39},{"ruleId":"503","severity":1,"message":"522","line":35,"column":6,"nodeType":"505","endLine":35,"endColumn":8,"suggestions":"523"},{"ruleId":"503","severity":1,"message":"524","line":46,"column":6,"nodeType":"505","endLine":46,"endColumn":16,"suggestions":"525"},{"ruleId":"492","severity":1,"message":"526","line":3,"column":25,"nodeType":"494","messageId":"495","endLine":3,"endColumn":28},{"ruleId":"492","severity":1,"message":"527","line":3,"column":30,"nodeType":"494","messageId":"495","endLine":3,"endColumn":37},{"ruleId":"492","severity":1,"message":"528","line":3,"column":39,"nodeType":"494","messageId":"495","endLine":3,"endColumn":47},{"ruleId":"492","severity":1,"message":"529","line":3,"column":49,"nodeType":"494","messageId":"495","endLine":3,"endColumn":53},{"ruleId":"492","severity":1,"message":"530","line":10,"column":10,"nodeType":"494","messageId":"495","endLine":10,"endColumn":19},{"ruleId":"492","severity":1,"message":"531","line":10,"column":21,"nodeType":"494","messageId":"495","endLine":10,"endColumn":30},{"ruleId":"492","severity":1,"message":"532","line":10,"column":32,"nodeType":"494","messageId":"495","endLine":10,"endColumn":40},{"ruleId":"492","severity":1,"message":"533","line":10,"column":42,"nodeType":"494","messageId":"495","endLine":10,"endColumn":52},{"ruleId":"503","severity":1,"message":"534","line":39,"column":6,"nodeType":"505","endLine":39,"endColumn":22,"suggestions":"535"},{"ruleId":"492","severity":1,"message":"536","line":1,"column":23,"nodeType":"494","messageId":"495","endLine":1,"endColumn":38},{"ruleId":"492","severity":1,"message":"537","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":15},{"ruleId":"492","severity":1,"message":"538","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":19},{"ruleId":"492","severity":1,"message":"539","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":22},{"ruleId":"492","severity":1,"message":"540","line":9,"column":10,"nodeType":"494","messageId":"495","endLine":9,"endColumn":23},{"ruleId":"492","severity":1,"message":"541","line":12,"column":10,"nodeType":"494","messageId":"495","endLine":12,"endColumn":21},{"ruleId":"492","severity":1,"message":"542","line":20,"column":9,"nodeType":"494","messageId":"495","endLine":20,"endColumn":16},{"ruleId":"492","severity":1,"message":"543","line":23,"column":9,"nodeType":"494","messageId":"495","endLine":23,"endColumn":14},{"ruleId":"492","severity":1,"message":"544","line":4,"column":31,"nodeType":"494","messageId":"495","endLine":4,"endColumn":39},{"ruleId":"492","severity":1,"message":"545","line":5,"column":9,"nodeType":"494","messageId":"495","endLine":5,"endColumn":15},{"ruleId":"492","severity":1,"message":"546","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":17},{"ruleId":"492","severity":1,"message":"547","line":3,"column":10,"nodeType":"494","messageId":"495","endLine":3,"endColumn":14},{"ruleId":"492","severity":1,"message":"546","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":17},{"ruleId":"492","severity":1,"message":"538","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":19},{"ruleId":"548","severity":1,"message":"549","line":4,"column":1,"nodeType":"550","endLine":16,"endColumn":2},{"ruleId":"551","severity":1,"message":"552","line":57,"column":34,"nodeType":"553","messageId":"554","endLine":57,"endColumn":36},{"ruleId":"492","severity":1,"message":"536","line":1,"column":23,"nodeType":"494","messageId":"495","endLine":1,"endColumn":38},{"ruleId":"492","severity":1,"message":"538","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":19},{"ruleId":"492","severity":1,"message":"546","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":17},{"ruleId":"492","severity":1,"message":"498","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":18},{"ruleId":"492","severity":1,"message":"499","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":17},{"ruleId":"492","severity":1,"message":"500","line":2,"column":19,"nodeType":"494","messageId":"495","endLine":2,"endColumn":30},{"ruleId":"492","severity":1,"message":"498","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":18},{"ruleId":"492","severity":1,"message":"516","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":16},{"ruleId":"503","severity":1,"message":"534","line":39,"column":6,"nodeType":"505","endLine":39,"endColumn":22,"suggestions":"555"},{"ruleId":"492","severity":1,"message":"538","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":19},{"ruleId":"492","severity":1,"message":"539","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":22},{"ruleId":"492","severity":1,"message":"540","line":9,"column":10,"nodeType":"494","messageId":"495","endLine":9,"endColumn":23},{"ruleId":"492","severity":1,"message":"541","line":12,"column":10,"nodeType":"494","messageId":"495","endLine":12,"endColumn":21},{"ruleId":"492","severity":1,"message":"542","line":20,"column":9,"nodeType":"494","messageId":"495","endLine":20,"endColumn":16},{"ruleId":"492","severity":1,"message":"543","line":23,"column":9,"nodeType":"494","messageId":"495","endLine":23,"endColumn":14},{"ruleId":"492","severity":1,"message":"547","line":3,"column":10,"nodeType":"494","messageId":"495","endLine":3,"endColumn":14},{"ruleId":"492","severity":1,"message":"546","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":17},{"ruleId":"492","severity":1,"message":"498","line":1,"column":21,"nodeType":"494","messageId":"495","endLine":1,"endColumn":29},{"ruleId":"503","severity":1,"message":"507","line":24,"column":6,"nodeType":"505","endLine":24,"endColumn":8,"suggestions":"556"},{"ruleId":"509","severity":1,"message":"510","line":150,"column":19,"nodeType":"511","endLine":150,"endColumn":30},{"ruleId":"492","severity":1,"message":"537","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":15},{"ruleId":"492","severity":1,"message":"544","line":4,"column":31,"nodeType":"494","messageId":"495","endLine":4,"endColumn":39},{"ruleId":"492","severity":1,"message":"545","line":5,"column":9,"nodeType":"494","messageId":"495","endLine":5,"endColumn":15},{"ruleId":"492","severity":1,"message":"512","line":6,"column":10,"nodeType":"494","messageId":"495","endLine":6,"endColumn":19},{"ruleId":"492","severity":1,"message":"501","line":1,"column":20,"nodeType":"494","messageId":"495","endLine":1,"endColumn":26},{"ruleId":"492","severity":1,"message":"502","line":5,"column":8,"nodeType":"494","messageId":"495","endLine":5,"endColumn":14},{"ruleId":"503","severity":1,"message":"504","line":30,"column":6,"nodeType":"505","endLine":30,"endColumn":8,"suggestions":"557"},{"ruleId":"492","severity":1,"message":"526","line":3,"column":25,"nodeType":"494","messageId":"495","endLine":3,"endColumn":28},{"ruleId":"492","severity":1,"message":"527","line":3,"column":30,"nodeType":"494","messageId":"495","endLine":3,"endColumn":37},{"ruleId":"492","severity":1,"message":"528","line":3,"column":39,"nodeType":"494","messageId":"495","endLine":3,"endColumn":47},{"ruleId":"492","severity":1,"message":"529","line":3,"column":49,"nodeType":"494","messageId":"495","endLine":3,"endColumn":53},{"ruleId":"492","severity":1,"message":"530","line":10,"column":10,"nodeType":"494","messageId":"495","endLine":10,"endColumn":19},{"ruleId":"492","severity":1,"message":"531","line":10,"column":21,"nodeType":"494","messageId":"495","endLine":10,"endColumn":30},{"ruleId":"492","severity":1,"message":"532","line":10,"column":32,"nodeType":"494","messageId":"495","endLine":10,"endColumn":40},{"ruleId":"492","severity":1,"message":"533","line":10,"column":42,"nodeType":"494","messageId":"495","endLine":10,"endColumn":52},{"ruleId":"548","severity":1,"message":"549","line":4,"column":1,"nodeType":"550","endLine":16,"endColumn":2},{"ruleId":"551","severity":1,"message":"552","line":57,"column":34,"nodeType":"553","messageId":"554","endLine":57,"endColumn":36},{"ruleId":"492","severity":1,"message":"517","line":15,"column":10,"nodeType":"494","messageId":"495","endLine":15,"endColumn":23},{"ruleId":"492","severity":1,"message":"518","line":15,"column":25,"nodeType":"494","messageId":"495","endLine":15,"endColumn":41},{"ruleId":"492","severity":1,"message":"519","line":23,"column":10,"nodeType":"494","messageId":"495","endLine":23,"endColumn":21},{"ruleId":"492","severity":1,"message":"520","line":23,"column":23,"nodeType":"494","messageId":"495","endLine":23,"endColumn":37},{"ruleId":"492","severity":1,"message":"521","line":24,"column":24,"nodeType":"494","messageId":"495","endLine":24,"endColumn":39},{"ruleId":"503","severity":1,"message":"522","line":35,"column":6,"nodeType":"505","endLine":35,"endColumn":8,"suggestions":"558"},{"ruleId":"503","severity":1,"message":"524","line":46,"column":6,"nodeType":"505","endLine":46,"endColumn":16,"suggestions":"559"},{"ruleId":"492","severity":1,"message":"493","line":3,"column":27,"nodeType":"494","messageId":"495","endLine":3,"endColumn":33},{"ruleId":"492","severity":1,"message":"496","line":3,"column":35,"nodeType":"494","messageId":"495","endLine":3,"endColumn":41},{"ruleId":"492","severity":1,"message":"497","line":3,"column":43,"nodeType":"494","messageId":"495","endLine":3,"endColumn":48},{"ruleId":"492","severity":1,"message":"515","line":29,"column":7,"nodeType":"494","messageId":"495","endLine":29,"endColumn":14},"no-native-reassign",["560"],"no-negated-in-lhs",["561"],["560"],["561"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'useState' is defined but never used.","'connect' is defined but never used.","'useSelector' is defined but never used.","'useRef' is defined but never used.","'Record' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'file'. Either include it or remove the dependency array. If 'setVideoScr' needs the current value of 'file', you can also switch to useReducer instead of useState and read 'file' in the reducer.","ArrayExpression",["562"],"React Hook useEffect has missing dependencies: 'fetchUserQestions' and 'preload'. Either include them or remove the dependency array. If 'fetchUserQestions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["563"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'IconClose' is defined but never used.",["560"],["561"],"'options' is assigned a value but never used.","'Button' is defined but never used.","'filterResults' is assigned a value but never used.","'setFilterResults' is assigned a value but never used.","'filterClear' is assigned a value but never used.","'setFilterClear' is assigned a value but never used.","'setResultsCount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkboxs' and 'data'. Either include them or remove the dependency array. You can also do a functional update 'setCheckboxs(c => ...)' if you only need 'checkboxs' in the 'setCheckboxs' call.",["564"],"React Hook useEffect has missing dependencies: 'checkboxs' and 'filters'. Either include them or remove the dependency array.",["565"],"'Tag' is defined but never used.","'Tooltip' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'IconShare' is defined but never used.","'IconPause' is defined but never used.","'IconPlay' is defined but never used.","'IconDelete' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["566"],"'applyMiddleware' is defined but never used.","'history' is defined but never used.","'useEffect' is defined but never used.","'notification' is defined but never used.","'clearUserData' is defined but never used.","'IconWarning' is defined but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.","'Checkbox' is defined but never used.","'Option' is assigned a value but never used.","'LoginForm' is defined but never used.","'Link' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["567"],["568"],["569"],["570"],["571"],"no-global-assign","no-unsafe-negation",{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"580","fix":"582"},{"desc":"574","fix":"583"},{"desc":"572","fix":"584"},{"desc":"576","fix":"585"},{"desc":"578","fix":"586"},"Update the dependencies array to be: [file]",{"range":"587","text":"588"},"Update the dependencies array to be: [fetchUserQestions, preload]",{"range":"589","text":"590"},"Update the dependencies array to be: [checkboxs, data]",{"range":"591","text":"592"},"Update the dependencies array to be: [checkboxs, filters, tagsList]",{"range":"593","text":"594"},"Update the dependencies array to be: [success, error, history, dispatch]",{"range":"595","text":"596"},{"range":"597","text":"596"},{"range":"598","text":"590"},{"range":"599","text":"588"},{"range":"600","text":"592"},{"range":"601","text":"594"},[883,885],"[file]",[685,687],"[fetchUserQestions, preload]",[996,998],"[checkboxs, data]",[1258,1268],"[checkboxs, filters, tagsList]",[1118,1134],"[success, error, history, dispatch]",[1118,1134],[685,687],[883,885],[996,998],[1258,1268]]